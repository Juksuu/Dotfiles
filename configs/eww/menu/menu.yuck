;; ********** Variables **********
(defpoll day :interval "1s" "date +'%A'")
(defpoll time :interval "1s" "date +'%H:%M'")
(defpoll date :interval "1s" "date +'%d %b %y'")

(defpoll wifi :interval "1s" "scripts/network wifi-status")
(defpoll ethernet :interval "1s" "scripts/network ethernet-status")

(defpoll bluetooth_icon :interval "1s" "scripts/bluetooth --icon")
(defpoll bluetooth_status :interval "1s" "scripts/bluetooth --status")
(defpoll bluetooth_tooltip :interval "1s" "scripts/bluetooth --battery")
(defpoll bluetooth_class :interval "1s" "scripts/bluetooth --class")

(defpoll volume :interval "1s" "scripts/volume")
(defpoll volume_icon :interval "1s" "scripts/volume icon")

;; ********** Widgets **********
(defwidget time_and_date []
 (box :class "top-row" :space-evenly false
  (label :class "time" :text time)
  (box :class "date-box" :orientation "v"
   (label :class "day" :text day)
   (label :class "date" :text date))))

(defwidget menu_button [enabled toggle_action icon open_action label]
 (box :class "menu-button-container" :orientation "v"
  (box :class "menu-button-box" :space-evenly false :halign "center"
   (button
    :class "menu-button ${enabled ? "menu-button-on" : "menu-button-off"}"
    :onclick toggle_action
    "${icon}")
   (label :class "separator" :text "-")
   (button
    :class "menu-button-arrow ${enabled ? "menu-button-arrow-on" : "menu-button-arrow-off"}"
    :onclick open_action
    ""))
  (label
   :class "menu-button-label"
   :text "${label}"
   :limit-width 9)))

(defwidget system_buttons []
 (box :class "system_buttons" :orientation "h"
  (menu_button
   :enabled "${wifi.enabled}"
   :toggle_action "scripts/network toggle-wifi"
   :icon "${wifi.icon}"
   :open_action ""
   :label "${wifi.ssid}")
  (menu_button
   :enabled "${ethernet.enabled}"
   :toggle_action "scripts/network toggle-ethernet"
   :icon "${ethernet.icon}"
   :open_action ""
   :label "")))

(defwidget sliders []
 (box :class "sliders" :orientation "v" :space-evenly false
  (box :orientation "h" :class "volume-slider-box" :space-evenly false :halign "center"
   (button :class "volume-slider-icon" :onclick "scripts/volume toggle" volume_icon)
   (scale :class "volume-slider"
    :value volume
    :orientation "h"
    :width 120
    :marks true
    :max 100
    :min 0
    :onchange "amixer sset Master {}%"))))

(defwidget spotify_menu []
 (revealer :transition "slidedown" :reveal spotify_running
  (box :class "spotify-container" :space-evenly false :orientation "v"
   (box :class "spotify-container-name" :space-evenly false :halign "center"
    (image :class "spotify-container-img" :path "${spotify_song_data.appIcon}" :image-width 20)
    (label :class "spotify-container-title" :text "SPOTIFY"))
   (box :class "spotify-data-container"
    (label
     :class "spotify-img"
     :valign "center"
     :halign "center"
     :style "background-image: url('${spotify_song_data.cover}');")
    (box
     :class "spotify-right-container" :orientation "v" :space-evenly false :valign "center"
     (box :class "spotify-song-data-container" :orientation "v" :space-evenly true :spacing 10
      (label
       :class "spotify-title"
       :text "${spotify_song_data.title}"
       :width 30
       :wrap true
       :justify "center"
       :limit-width 20)
      (label
       :class "spotify-artist"
       :text "${spotify_song_data.artist}"
       :width 30
       :wrap true
       :justify "center"))))
   (box :class "spotify-controls" :orientation "h" :halign "fill"
    (button :onclick "playerctl -p spotify previous" "󰒮")
    (button :onclick "playerctl -p spotify play-pause" "${spotify_status}")
    (button :onclick "playerctl -p spotify next" "󰒭")))))

(defwidget system_menu []
 (box :class "system-menu-box" :orientation "v" :space-evenly false
  (time_and_date)
  (system_buttons)
  (sliders)
  (spotify_menu)))
  ;; (box :class "bottom-row" :space-evenly true
  ;;  (box :class "side-options-box" :halign "end" :space-evenly false :spacing 30
  ;;   (button :class "power-button" :onclick "poweroff" "")
  ;;   (button :class "exit-button" :onclick "scripts/launchApps --powermenu" "")))))

;; ********** Windows **********
(defwindow system_menu
 :monitor 1
 :stacking "fg"
 :wm-ignore true
 :geometry (geometry :x 10 :y 10 :width "17%" :height "30%" :anchor "right top")
 (system_menu))
